on:
    push:
        branches:
            - main
    pull_request:
        branches:
            - main

name: Windows build
# jobs:
#     test-windows:
#         runs-on: windows-latest
jobs:
    test-windows:
        runs-on: ${{ matrix.os }}
        name: ${{ matrix.os }} (${{ matrix.python-version}})
        strategy:
            fail-fast: false
            matrix:
              os: ["windows-latest"]
              python-version: ["3.6","3.7","3.8","3.9","3.10","3.11"]
        steps:
          - name: Checkout code
            uses: actions/checkout@v3
      
          - name: Install miniconda
            uses: conda-incubator/setup-miniconda@v2
            with:
              auto-activate-base: true
              python-version: ${{ matrix.python-version}}
          - name: Install GDAL
            run: |
              conda install -c conda-forge gdal --yes
          - name: Test GDAL installation
            run: |
              python -c "from osgeo import gdal"
              gdalinfo --version
          - name: Install dependencies
            run: |
                python -m pip install --upgrade pip
                pip install --no-cache-dir Cython
                pip install -r requirements.txt
                pip install .

        # steps:
        #     - uses: actions/checkout@v3
        #     - name: Install miniconda
        #       uses: conda-incubator/setup-miniconda@v2
        #       with:
        #           auto-activate-base: true
        #           python-version: "3.8"
        #     - name: Install GDAL
        #       run: conda install -c conda-forge gdal --yes
        #     - name: Test GDAL installation
        #       run: |
        #           python -c "from osgeo import gdal"
        #           gdalinfo --version
        #     - name: Install dependencies
        #       run: |
        #           python -m pip install --upgrade pip
        #           pip install --no-cache-dir Cython
        #           pip install -r requirements.txt
        #           pip install .
